[tool.poetry]
name = "eznashdb"
version = "0.1.0"
description = "The Ezrat Nashim Database"
authors = ["Ari Abramowitz <ari.abramowitz1@gmail.com>"]

[tool.djlint]
profile = "django"
blank_line_before_tag="block"
blank_line_after_tag="endblock,extends"
format_attribute_template_tags=true
max_line_length=105
preserve_leading_space=false
preserve_blank_lines=false

[tool.ruff]
exclude = [
    ".git",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
line-length = 105
indent-width = 4

[tool.ruff.lint]
select = [
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "E",  # Error (pycodesyle)
    "W",  # Warning (pycodesyle)
    "F",  # pyflakes
    "I",  # isort
    "ISC", # flake8-implicit-str-concat
    "PGH",  # pygrep-hooks
    "Q",  # flake8-quotes
    "DJ", # flake8-django
    "SIM",  # flake8-simplify
    "UP",  # pyupgrade
    "C4", # flake8-comprehensions
    "T10", # flake8-debugger
    "PT", # flake8-ptest-style
    "C90", # flake8-mccabe
]
ignore = [
    "W191",  # Indentation contains tabs
    "E111",  # Indentation is not a multiple of four
    "E114",  # Indentation is not a multiple of four (comment)
    "E117",  # Over-indented
    "E501",  # Line too long
    "Q000",  # Remove bad quotes (inline)
    "Q001",  # Remove bad quotes (multiline)
    "Q002",  # Remove bad quotes (docstring)
    "Q003",  # Remove avoidable escaped quote
    "ISC001",  # Implicit string concatenation (single-line)
    "ISC002",  # Implicit string concatenation (multi-line)
    "B026", # Star-arg unpacking after a keyword argument is strongly discouraged
    "B904", # 'assertRaises' should be used as a context manager
    "DJ001" # Avoid using null=True on string-based fields such as CharField and TextField
]

[tool.ruff.lint.per-file-ignores]
"**/tests/**" = ["C90"]


[tool.ruff.format]
docstring-code-format = true
exclude = [
    "aging/migrations/**",
    "app/migrations/**",
    "application/migrations/**",
    "authorizations/migrations/**",
    "billing_calendar/migrations/**",
    "facility_config/migrations/**",
    "shared/migrations/**",
    "tracking/migrations/**",
    "users/migrations/**",
]

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.poetry.dependencies]
python = "^3.10"
Django = "^4.0"
gunicorn = "^20.1.0"
whitenoise = "^5.3.0"
dj-database-url = "^0.5.0"
python-dotenv = "^0.19.2"
django-cors-headers = "^3.11.0"
psycopg2-binary = "^2.9.5"
django-filter = "^23.2"
django-crispy-forms = "^2.0"
crispy-bootstrap5 = "^0.7"
faker = "^19.1.0"
pytest-mock = "^3.11.1"
requests = "^2.31.0"
djangorestframework = "^3.14.0"
sentry-sdk = {extras = ["django"], version = "^1.44.0"}
django-enforce-host = "^1.1.0"

[tool.poetry.group.dev.dependencies]
pytest = "^6.2.5"
pytest-django = "^4.5.2"
pytest-testmon = "^1.2.2"
pytest-watch = "^4.2.0"
pytest-spec = "^3.2.0"
beautifulsoup4 = "^4.11.1"
pytest-xdist = "^3.2.1"
pre-commit = "^3.3.2"
djlint = "^1.19.7"
flake8-pytest-style = "^1.7.2"
flake8-bugbear = "^22.1.11"
flake8-comprehensions = "^3.12.0"
flake8-django = "^1.2"
flake8-mutable = "^1.2.0"
pytest-describe = "^2.1.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
