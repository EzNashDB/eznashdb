# Based on:
#   - https://jacobian.org/til/github-actions-poetry/
#   - https://www.hacksoft.io/blog/github-actions-in-action-setting-up-django-and-postgres

name: CI
on:
  pull_request:
    branches:
      - main

env:
  POETRY_VERSION: 1.6.1
  DATABASE_NAME: github_actions
  DATABASE_USER: postgres
  DATABASE_PASSWORD: postgres
  DATABASE_HOST: 127.0.0.1
  DATABASE_PORT: 5432
  SECRET_KEY: "insecurekey"

jobs:
  CI:
    # Run on a Ubuntu VM
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      # Checkout the GitHub repo
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.2.2
          virtualenvs-create: true
          virtualenvs-in-project: true

      # Based on https://stackoverflow.com/a/64619993
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install python dependencies
        run: poetry install --no-interaction --no-root
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm ci
      - run: npm run build

      - name: Run Pre-commit
        run: poetry run pre-commit run --show-diff-on-failure --color=always --all-files --hook-stage push

      - name: Run tests - python
        run: poetry run pytest -n auto

      - name: Run test - js
        run: npm test
